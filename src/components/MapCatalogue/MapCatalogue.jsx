import React, { useState } from "react";
import { useSelector } from "react-redux";
import { NavLink, Outlet } from "react-router-dom";
import "./map-catalogue.css"


import mapLight from "../../assets/images/mapLight.svg";
import mapDark from "../../assets/images/mapDark.svg";
import photo1 from "../../assets/images/Karpaty.svg";
import photo2 from "../../assets/images/ZahPod.svg";
import photo3 from "../../assets/images/Volyn.svg";
import photo4 from "../../assets/images/ZahPol.svg";
import photo5 from "../../assets/images/ShidPol.svg";
import photo6 from "../../assets/images/SeredPol.svg";
import photo7 from "../../assets/images/ShidPod.svg";
import photo8 from "../../assets/images/SeredNad.svg";
import photo9 from "../../assets/images/Slobidshyna.svg";
import photo10 from "../../assets/images/Donshyna.svg";
import photo11 from "../../assets/images/Tavria.svg";
import photo12 from "../../assets/images/NyjPod.svg";
import photo13 from "../../assets/images/NyjPob.svg";
import photo14 from "../../assets/images/Krym.svg";

import { useEffect } from "react";

const regions = {
  region1: `m 0,313.64528 0.27085084,-30.877 6.22956936,-3.52106 5.4170168,-4.87532 3.791912,-5.14616 1.625105,-3.79191 -0.541702,-1.62511 -1.354254,-2.43766 9.47978,-11.64658 15.438498,-0.27085
h 0.812552
l -3.25021,-4.60447 -5.687868,-6.77127 -0.27085,-16.79275 8.667226,-20.04296 21.938919,5.68786 16.792752,31.9604 27.355933,7.58383 20.85552,20.04296 23.83487,3.79191 21.93892,12.72999 14.62595,16.5219 2.1668,18.41786 16.79275,42.25273 -6.22957,2.70851 -37.10656,-0.27085 -4.87532,13.27169 -13.81339,2.43766 -7.85467,-7.04212 0.27085,-14.3551 -0.27085,-1.89595 -5.41702,-0.54171
h -28.71019
l -10.834033,-5.41701 -12.188288,-4.33362 -13.271692,0.27085 -7.312972,-6.22957 -8.667227,-6.22956 -8.125526,6.77127 -10.292332,0.27085 -7.312972,-6.77127
h -7.042122
l -1.625105,-0.27085 -0.541702,-1.08341 1.083403,-1.35425 2.97936,-2.43766
v -1.35425
l -5.417017,-4.06277
z`,
  region2: `m 46.586345,195.28346 13.000841,-14.08425 9.479779,-8.12552 10.834034,-9.20893 8.938078,-9.75063 8.396376,-8.39638
h 20.855517
l 0.27085,-11.91743 0.5417,-0.81256 1.89596,1.08341 5.14616,4.33361 8.66723,5.14617 2.70851,1.6251 7.85467,8.66723
h 7.58383
l 6.77127,1.0834 5.68786,2.16681 4.33362,3.52106 2.1668,3.52106 0.54171,2.97936 0.5417,4.87532
v 9.47978
l 8.12552,7.04212 7.85468,6.22957 6.77127,4.06276 2.97936,0.81255 6.50042,1.62511 4.33361,2.1668 3.52106,3.25021 1.62511,3.79192 -0.5417,7.31297 -1.08341,15.16765 1.89596,11.37573 2.16681,14.08424 -4.60447,26.54339 11.10489,24.91827 22.20976,22.20977 -9.20892,7.31298 -11.10489,-0.27085 -14.08424,13.81339 -12.72999,-28.16849 -0.27085,-30.877 -12.45914,-10.83403 -4.60447,-3.52106 -4.87531,-4.06276 -6.50042,-4.60447 -9.47978,-5.68786 -6.77127,-2.70851 -12.72999,-2.16681 -9.47978,-1.6251 -17.60531,-19.50127 -27.626782,-7.31297 -13.813393,-32.23125 -23.564023,-1.89595 -1.895956,-0.81256
z`,
  region3: `m 108.40058,115.29532
v -8.61842
h 35.04825
l 35.43129,2.10673 24.3231,5.36257 28.15351,11.29971 2.68128,-0.76609 10.53363,-4.78801 4.59649,-1.9152 2.48977,-0.19152 2.48976,0.76608 2.68129,3.25585 4.40497,4.78801 4.02193,2.48977 4.78801,1.72368 8.61842,2.29825 9.57602,1.34064 14.17252,1.14912 12.64035,0.76608 1.9152,3.25585 0.95761,3.83041
v 4.78801
l -0.76608,6.70322 -1.91521,5.93713 -2.48977,5.17106 -2.48976,2.68128 -1.91521,1.34065 -1.34064,3.63888 -1.9152,6.5117 -1.53217,5.93713 -1.9152,6.12866 -1.34065,3.63889 -1.72368,2.10672 -1.53216,0.57457 -1.53217,-0.38305 -0.9576,-0.57456 -6.32018,-1.14912 -6.32017,-0.57456 -3.63889,0.19152
h -1.53216
l -0.57457,0.19152 -2.8728,-2.68129 -5.17105,-4.21345 -5.5541,-4.21345 -3.83041,-2.48976 -4.78801,-2.10673 -3.63889,-0.57456 -6.51169,-0.76608 -4.40497,-0.19152 -5.93714,1.14912 -5.36257,0.38304 -2.68129,-0.57456 -1.9152,-0.76608 -0.95761,-1.14912 -2.29824,-0.57457 -4.02193,0.38304 -4.78801,1.53217 -4.02193,1.9152 -5.93714,2.68129 -4.40497,2.48977 -2.87281,0.9576 -4.02193,-0.9576 -4.40497,-1.91521 -3.06432,-2.10672 -2.29825,-3.44737 -1.34064,-3.06433
v -6.89474
l -1.72369,-5.55409 -1.9152,-4.21345 -1.91521,-1.91521 -2.10672,-1.9152 -2.10673,-1.72368 -3.25584,-1.72369 -2.48977,-0.9576 -4.59649,-1.34064 -4.59649,-0.76609 -5.5541,-0.57456 -6.70321,-6.70321 -12.25731,-6.89474 -6.12866,-8.23538 0.19152,-5.36257 -0.38304,-0.76609 -1.14912,-0.38304 -6.70322,0.19152
z`,
  region4: `m 98.824562,77.75731 -0.383041,-9.576023 5.554089,-16.853802 -0.38304,-7.086257 0.38304,-0.766082 12.44883,-0.383041 10.91667,2.681287 4.97953,-7.852339 7.85234,-4.404971 5.36258,-8.426901 23.36549,0.191521 8.4269,3.830409 8.80994,-4.02193 11.68275,4.213451 8.04386,3.638889 9.57603,-3.83041
h 9.95906
l 12.83187,3.638889 5.36258,3.638889 3.44736,1.340643 3.63889,0.574562 12.06579,-0.191521 5.5541,7.660819 4.21345,2.681286 1.14912,1.532164 0.19152,1.340643 -0.57456,1.532164 -3.83041,2.106725 -2.48977,0.766082 -1.14912,1.149123 -2.68129,3.447368 -2.68128,4.404971 -3.63889,6.703217 -3.25585,5.362573 -1.14912,1.532163 -1.34065,11.491229 -0.76608,5.554093 -1.53216,7.469297 -1.14912,6.89474 -11.68275,8.04386 -1.53217,0.19152 -2.8728,-0.76608 -2.87281,-1.53217 -4.02193,-1.9152 -5.55409,-2.29825 -4.21345,-1.14912 -3.44737,-0.76608 -8.04386,-1.72369 -8.04386,-1.72368 -8.23538,-1.53216 -8.61842,-0.95761 -9.76755,-0.57456 -10.3421,-0.76608 -9.57603,-1.14912 -8.61842,-1.340646 -9.3845,-0.574562
h -8.4269
l -6.89474,-0.574561 -7.4693,-2.106725
V 85.226608
l -0.9576,-0.766082
z`,
  region5: `m 453.94601,74.483982
h 4.06277
l 0.5417,-10.021481 11.37573,-5.417017 -5.68786,-10.292332 0.81255,-0.541702 11.91744,-3.25021 5.14616,-14.896796
h 12.72999
l 14.3551,-12.72999 40.89847,0.541702 9.47978,-7.583824
V 0.81255253
h 14.62595
l 9.75063,9.20892847 11.91744,-9.20892847
h 12.72998
l 5.68787,2.43765757 4.60447,1.6251051 5.14616,0.5417017 11.64659,-0.2708509 0.5417,0.8125526 0.27085,6.5004204 10.83404,0.270851 1.0834,0.812552
v 11.646586
l 14.35509,6.771272 0.27085,20.042962 -7.31297,4.062763 -0.5417,0.27085 1.62511,2.166807 5.95871,4.604464 0.27085,11.375736 -4.33361,16.251051 0.5417,3.52106 2.16681,8.396377 1.0834,6.77127 -4.60446,6.50042 -7.31297,11.64659 -18.14701,4.06276 -18.68871,-9.47978 -11.37573,-5.68787 -7.04213,-2.97936 -13.27169,-11.64658 -18.41786,8.66722 -33.85635,14.3551 -29.79359,17.33445 -14.62595,12.45914 -1.89595,-2.97936 -1.89596,-1.6251 -2.16681,-0.5417 -4.60446,-0.54171 -4.06276,-0.81255 -2.70851,-1.35425 -0.81256,-1.89596
v -1.89595
l 2.16681,-3.25021 5.41702,-4.33362 7.04212,-5.68787 -0.27085,-11.10488 -10.02148,-19.772112 -1.89596,-2.166807 -6.50042,-4.604464 -5.14616,-5.958719 -2.43766,-4.875315 -1.62511,-3.791912 -0.5417,-1.625105
z`,
  region6: `m 280.76901,52.093567 18.57748,-0.574561 13.59795,3.638889 3.44737,1.723684 3.06433,0.957602 3.44737,-0.383041 3.25585,-0.383041 3.83041,0.957603 3.44736,2.106725 7.27778,1.532164
h 22.98246
l 3.06433,5.554093 3.44736,5.362573 0.76609,0.574562 2.68128,-2.106725 2.48977,-2.681287 3.44737,-6.703216 16.08772,0.19152 1.14912,0.191521 0.19152,1.532163 0.19152,10.533626 7.4693,4.596491 7.4693,-5.171052 12.25731,0.19152 4.40497,-4.979532 8.04386,0.19152 4.02193,9.384503 0.38304,0.383041 5.55409,0.191521 0.38304,0.19152 2.68129,4.404971 2.48977,4.596491 3.63888,4.596492 3.83041,3.830409 3.83041,2.681286 1.53217,0.766082 3.63889,5.362576 1.34064,2.29824 2.68129,5.74562 1.14912,4.78801 0.38304,4.78801 -0.76608,4.78801 -0.57456,0.76608 -7.66082,5.93714 -4.21345,3.63889 -1.14913,1.53216 -1.34064,2.29825 -0.19152,1.72368 0.76608,2.68129 1.34065,2.10672 2.10672,2.68129 1.53216,2.29824 1.14913,1.91521 1.34064,0.9576 4.21345,0.76608 4.02193,0.19152 2.10673,0.38305 0.57456,0.9576
v 1.9152 1.91521
l -0.95761,3.25584 -1.9152,1.91521 -1.9152,0.9576 -3.63889,1.14912 -2.29825,0.19153 -3.63889,0.38304 -2.48976,0.38304 -3.06433,2.68128 -3.83041,3.06433 -4.59649,4.40497 -7.4693,12.83187 -26.2383,3.63889 -31.98392,-5.93713 -14.17252,-5.74562 -21.64181,-5.36257 -18.57749,0.9576 -9.76754,-4.21345 4.02193,-5.93713 3.63889,-7.27778 1.53216,-4.59649 1.14913,-5.55409
v -4.5965
l -0.57457,-4.40497 -0.76608,-4.21345 -1.53216,-3.83041 -1.91521,-2.29824 -2.8728,-2.29825 -3.63889,-1.34064 -4.59649,-1.72369 -5.93714,-1.14912 -8.23538,-0.57456 -8.23538,-0.19152 -6.51169,-0.38304
h -5.36258
l -4.21345,-0.76608 -4.97953,-1.53217 -3.25585,-1.9152 -3.25585,-2.29825 -3.06432,-2.48976 -2.48977,-3.25585 -4.02193,-6.5117 0.9576,-2.8728 0.76609,-6.70322 0.57456,-5.937134 -0.19152,-9.576024 11.49122,-19.343567 6.32018,-5.554094 4.40497,-4.021929
z`,
  region7: `m 211.9687,190.90684 2.16019,-2.43022 9.18081,-1.89016 4.17285,0.22603 4.19789,0.044 0.27002,0.81007
h 7.29064
l 6.7506,0.54005 3.78033,-2.43021 3.78033,-0.81007 2.70024,1.62014 3.24029,3.51031 9.99088,10.53093 1.62014,1.08009 31.32277,2.70024 4.32038,-7.02062 2.16019,-7.56067 2.43021,-8.10071 17.35146,6.882 24.54384,0.33039 25.39409,9.15213 12.80753,1.86513 15.82459,1.56093 14.48981,1.80185 16.02885,0.19152 9.0678,17.69569 -2.38623,25.5961 4.86043,6.21055 4.05036,5.94052 2.70024,1.35012 4.5904,0.27002 4.86043,-0.54004 7.56067,-2.16019 2.16019,-0.54005 3.80537,0.93257 1.92469,2.17913 1.83061,21.46047 -1.02394,8.25772 -1.34064,3.24976 -5.41604,5.02691 -3.54482,7.28456 -2.41835,7.78352 1.5954,9.71742 3.30663,11.30632 -6.98611,4.34881 -5.74901,9.23089 -26.14831,-7.65474 -5.09594,1.57615 -6.91369,2.45526 -6.42102,1.14304 -6.21055,0.72817 -7.9437,-0.0406 -9.87787,-0.68757 -14.60293,-1.95311 -3.3946,4.25136 -2.60278,3.98132 -23.37906,-0.54005 -9.83387,-9.41632 -8.30172,0.96708 -8.36126,-6.74112 -3.24028,-5.94052 -2.43022,-1.35012 -17.94406,-9.15578 -6.6281,-1.64517 -9.87787,-2.4397 -30.35568,10.27039 -7.56067,-9.99088 -1.89017,-2.16019 -14.04123,-8.60625 -9.45084,-22.71652 3.24029,-16.74147 0.81007,-9.72086 -1.0801,-9.72086 -2.70023,-13.23117 5.13045,-11.07097 -1.35012,-17.28153
z`,
  region8: `m 449.04961,207.10827 6.75389,-19.43675 16.99993,-8.09824 14.05364,-9.1866 12.41697,-21.60108 29.1634,-16.20225 51.31197,-21.06103 14.30299,9.44256 34.29964,17.01894 21.05689,-3.52106 5.9455,19.98094 10.02717,6.07587 1.03222,16.34438 15.93637,15.66303 -0.53675,7.834 -1.62344,9.1775 -1.35012,14.58129 -4.8563,15.10644 -8.49407,19.29263 -9.06823,5.00786 -5.9339,15.4079 -3.69183,11.24805 -28.17098,-11.51807 -63.18558,22.682 -64.26567,-13.77121 -1.89016,-34.29303 -11.07098,-7.02062 -17.28152,7.56067 -8.37074,-10.80095 2.43021,-25.11222
z`,
  region9: `m 668.03893,86.137598 4.05035,0.270024 3.24029,4.590405 6.21055,3.240285 9.45083,0.810072 11.07098,1.080095 7.29064,1.620143 8.64076,3.240288 -0.54005,6.75059 7.02062,3.24029 4.05036,4.5904 1.62014,4.32039
v 24.57216
l 2.70024,5.94053 3.51031,3.51031 6.21055,1.62014 28.08248,-1.35012 8.10071,7.02062
h 15.39136
l 10.80095,-7.29064 3.78033,-1.62015 11.61103,-0.27002 12.15107,-9.45083 5.94052,6.48057 8.37074,18.63164 9.99088,-0.27002 7.83069,8.91078 7.8307,14.31127 -8.64077,9.72085 0.27003,12.69112 -2.142,5.12301 -5.84607,5.90169 -2.55279,2.46574 1.33358,3.49956 0.453,5.19766 -0.80163,4.97085 -3.12032,3.89175 -7.78602,3.43904 -5.46004,6.2843 -4.33527,8.89094 -3.75222,4.33692 -12.01591,6.42997 -7.16901,1.67405 -0.53756,5.10895 -2.67295,4.07021
c -2.43352,-7.04212 2.08875,7.95827 -5.67546,7.31297
l -4.60116,-0.54584 -1.35838,0.26506 -5.95872,-0.007 -4.05533,1.07679 -5.39303,5.67547 -3.23946,2.43517 -4.04126,2.15027 -8.91078,-4.86043 -7.29064,-1.08009 -8.64077,-2.43022 -9.45083,-2.16019 -4.86043,-0.81007 -3.51031,-0.27002 -4.86043,2.43021 -6.21055,2.16019 -11.07097,4.32038 -23.49207,0.54005 -9.18164,-3.50039 -9.98096,-4.33609 -8.84612,-3.45675 6.98573,-20.36158 4.54905,-1.55233 12.96363,-25.92808 7.29064,-22.41197 2.97026,-33.21293 -19.98921,-20.79681 -0.56003,-9.57257 -7.5291,-3.1053 -6.75473,-19.97681 10.80095,-12.43185
z`,
  region10: `m 878.78389,178.3059 0.73517,-0.55561 0.87099,-0.0881 11.55428,5.43511 12.98399,-0.0479 12.98229,11.0231 0.66254,-0.2394 6.54182,-9.47757 0.82668,-0.72973 1.18764,0.20942 8.75989,10.76007 11.70848,-0.0479 3.32438,0.53227 3.16448,1.08071 5.43229,2.83548 4.85092,3.16218 4.07932,3.38183 14.83405,0.0785 0.70348,0.64917 0.18058,1.67518 -0.0528,11.38561 5.99696,10.06225 -6.07346,8.63746 0.041,9.19049 -0.58351,1.07372 -4.17228,0.1217 -2.17121,0.14915 -0.81172,0.6028 7.89922,7.35918 -0.002,10.26255 -12.69029,4.85961 -2.97026,6.81665 6.20889,11.00161 8.37074,5.94053 6.82079,7.42855 -0.80772,1.61862 -4.93132,6.14601 4.11393,5.25843 0.81835,1.55326 -0.85233,1.53545 -1.91645,0.56116 -1.2147,1.20973 -0.99311,2.14457 -0.0919,19.33019 -9.31706,10.86949 -39.08327,-0.13542 -9.11309,8.6391 -0.13708,8.36743 -0.37733,0.8142 -6.32655,0.0782 -1.55571,0.0652 -13.20606,5.45933 0.27168,25.24351 5.3311,11.9529 -5.80675,8.03383 -31.25257,-0.27003 -9.92648,11.88188 -7.69443,7.62672 -7.0875,0.0685 -0.52346,-1.0231 0.11718,-13.49626 -1.39964,-2.62012 -2.8794,-3.43599 -2.43766,-2.70271 -2.06611,-2.63997 -1.35995,-3.1652 -0.13224,-1.2328 1.33747,-3.29312 1.8492,-5.68208 -8.64159,-9.4525 -1.48555,-5.46901 -3.1734,-10.32531 -9.98757,0.0677 -12.37921,-8.54413 -0.44817,-0.91001 0.14364,-14.22498 0.54873,-0.81644 12.91795,-5.14134 -0.0612,-22.26834 -8.43588,-13.67934 0.0173,-13.92434 7.65642,-13.28293 9.24206,-4.23409 4.24476,-2.17542 3.01849,-2.20865 2.02449,-2.25791 2.94692,-5.03419 2.30739,-4.3573 1.78188,-2.90102 1.4364,-1.94753 1.52438,-1.7159 2.7496,-2.35634 2.06295,-1.12723 3.16412,-1.27602 3.6171,-1.74213 2.85442,-2.22134 1.84511,-2.14692 1.79566,-3.6633 0.36125,-2.10705 0.16563,-2.33465 -0.006,-1.56409 -0.64426,-3.69581 -0.53531,-1.49013 -0.38889,-0.80385 -0.44608,-1.00097 0.41605,-0.82267 4.23769,-4.07902 2.58155,-3.15758 1.27865,-2.17231 0.58686,-1.49169 0.62278,-4.6204 0.1433,-7.43102 5.94053,-10.26091
z`,
  region11: `m 675.33735,430.58275 10.12716,9.38694 3.50431,2.60712 17.05318,7.43997 0.21498,0.90963 -3.48907,4.91925 -5.38552,7.86763 -0.99696,3.78871 -0.50013,2.21131 0.1224,2.86253 0.7855,3.72994 1.43378,2.55169 1.24281,1.53867 2.06384,1.93506 5.29274,3.93916 4.31076,3.42618 3.82186,3.09693 4.30745,6.85061 3.49137,5.26192 1.32529,2.06954 -0.091,1.04786 -0.67402,0.93529 -13.86336,-0.0317 -4.51163,0.0278 -0.66643,7.46491 -23.74393,5.87464 -12.63129,1.5217 -10.55326,1.26168 -14.94161,4.34452 -2.37868,0.67463 -0.89878,-0.76479 -0.17148,-1.13487 -0.0134,-11.3811 -0.79281,-0.12249 -9.65742,5.43852 -1.47241,0.64348 -0.92937,-0.35415 -7.8268,-6.50729 -13.42269,-0.0479 -12.83476,7.11249 -28.00341,0.0488 -1.2498,-0.28828 -0.55854,-0.55725 -6.44995,-13.14877 -10.0866,0.0541 -1.3357,-0.34742 -0.76328,-0.5552 -6.87061,-13.6704 -0.24577,-0.9454 0.60194,-0.84595 7.33007,-0.31391 11.3686,-8.03116 19.01635,-4.92195 -0.14953,-9.58619 33.28195,0.0785 5.73631,-2.28716 9.07101,-6.16377 5.4141,-4.46737 4.6679,-4.58891 4.22588,-4.91424 2.34292,-3.33435 1.45003,-2.90907 1.22594,-3.17875 1.34641,-2.69705 1.89003,-1.82357 2.09246,-0.0572 2.27744,1.47161 2.4538,1.96289 2.93373,2.11727 2.56806,0.071 4.15343,-1.51791 12.22137,-7.30954
z`,
  region12: `m 482.89835,346.47507 2.06443,-10.74918 -7.83069,-13.42269 1.89016,-13.67546 12.15107,-13.80572 65.5718,15.91415 65.11973,-23.55332 19.8471,12.80583 9.70969,-0.97486
c 0.89219,-0.10504 3.15984,-1.32731 5.6987,-0.63326 1.83853,0.50259 9.46811,4.59923 9.46811,4.59923
l 6.79549,3.2665 2.9458,1.3153 4.37303,1.08931 4.97597,0.068 10.19104,-0.0752 6.10587,0.12716 2.93317,-0.28034 1.09156,-0.66929 3.57044,-1.94383 10.59648,-3.25953 6.58419,-1.63002 5.94392,-1.20967 18.29704,3.04894 5.12262,2.62764 9.9425,6.02242 3.19698,0.92807 4.1796,0.33697 4.14591,-1.46002 4.04653,-2.24471 3.33265,-2.56049 8.55723,-6.68784 1.67694,0.19779 4.29676,3.98477 1.88863,2.65728 2.76161,5.38484 2.72527,7.7461 5.68945,7.83238 -0.57456,14.51057 -5.88097,2.26373 -6.31472,6.20942 0.853,4.4863 0.20877,17.66626 5.65325,9.38958 8.16196,0.0345 12.30808,10.44464 5.97503,10.13841 -2.34901,3.15739 -1.4765,3.47906 -0.11471,2.92153 1.46662,4.02092 3.6332,5.29604 3.13583,5.49329 2.07652,3.75316 -0.76269,4.28147 -5.63599,6.89035 -5.85254,9.43189 -11.78304,7.06928 -1.17811,-0.24797 -7.92645,-6.8291 -11.542,0.0173 -0.0958,16.98873 -0.67032,1.00711 -32.11557,0.0173 -12.30808,8.0662 -8.02221,11.29701 -14.79007,-0.0173 -6.63263,-4.14533 -5.40549,-3.01764 -4.68216,-3.74334 -1.40195,-2.51314 -0.81395,-2.2135 0.0423,-3.42233 0.80061,-3.08328 1.35012,-2.96078 1.56837,-2.44748 3.25584,-5.28137 2.07188,-2.75471 1.10165,-2.28801 -0.12137,-1.96064 -0.87274,-1.3538 -2.87324,-2.21894 -7.73308,-3.78084 -6.59528,-2.55102 -5.92942,-4.47116 -6.55292,-5.55423 -5.00202,-4.76145 -0.16903,-4.3659 -0.96808,-3.4697 -1.35791,-2.86504 -1.00159,-2.55101 -0.69944,-2.90732 -0.27002,-4.62831 -5.51524,-1.00833 -5.49524,-1.20312 -4.36362,-2.27202 -8.29224,-5.8292 -17.30047,-0.0612 -11.20904,-1.57615 -7.21214,-2.46473 -4.49464,-3.20577 -3.33605,-2.997 -2.85555,-14.3715 -1.40967,-4.64048 -1.81166,-2.09894 -2.30942,-1.10684 -3.17465,0.4003 -4.11769,1.62692 -7.25613,4.1522 -8.11797,6.03968 -5.25545,4.34199 -10.64584,-0.14259 -13.70174,-0.95807 -4.32191,-0.95341 -4.43231,-0.85152 -3.55429,-1.45805 -2.75202,-1.97644 -1.5037,-2.61873 -0.23724,-3.75561 0.23043,-3.23859 0.14372,-3.55772 -1.48436,-2.60106 -2.50426,-1.10476 -5.02968,-0.31778 -11.9078,2.14829 -6.71437,1.0903 -5.17613,0.56239
z`,
  region13: `m 371.62214,373.24477 -0.63355,-0.67853 0.025,-9.17611 6.5425,-9.44752 1.63084,-1.83035 4.94585,0.6507 8.06593,0.91776 4.48855,0.19252 5.56235,0.27991 7.2362,0.99628 6.20142,0.11683 5.1379,-0.67713 4.60446,-1.52679 10.82908,-4.25525 16.03374,3.4427 4.10071,3.75801 3.24773,1.62427 1.82376,0.0299 11.90207,-10.76229 22.80171,15.54084 1.21552,0.74153 9.92152,-0.81255 6.15937,-0.9455 11.06271,-0.81255 -0.8142,12.09164 5.65065,6.39383 4.2293,3.57013 3.25951,2.16395 4.63562,1.24037 4.84994,0.68981 5.25183,0.10534 11.14779,-0.50863 12.14362,-0.62595 10.93639,-7.22376 6.13787,-5.46405 3.0297,-2.07512 1.94464,-0.15852 1.42531,0.53993 1.30267,2.49182 0.39609,5.49214 -0.19422,6.53133 3.16099,4.30218 4.26886,4.58468 3.26948,2.11971 5.97758,2.85376 7.1347,1.73169 9.03528,0.7067 7.0346,0.0302 4.34108,0.14014 4.55591,0.88436 3.47322,1.40813 4.57725,2.675 12.76782,9.74918 0.77834,1.07406 -0.16974,3.50891 -1.06657,2.3651 -1.55473,1.87706 -2.03552,1.61936 -2.79963,0.52256 -3.28017,0.20412 -2.94682,-0.13595 -2.72858,-0.56043 -4.85546,-0.96865 -4.02701,-0.81191 -4.47833,-0.25082 -3.5681,6.07016 -2.91247,5.44586 -2.47973,3.94389 -4.65148,5.14085 -3.77622,3.52554 -4.80678,4.02224 -6.30569,4.25729 -5.85861,2.49 -4.10221,1.24189 -9.68786,0.33984 -26.50954,-0.0235 0.0677,9.71755 -1.24907,0.71766 -11.84584,0.22949 -1.22057,-1.2662 -5.26165,-8.85928 -0.8778,0.20314 -15.2551,15.86204 -13.97353,-0.0661 -19.17251,-6.20972 -11.67791,6.07429 -8.50533,7.42359 0.0652,13.77121 -8.47962,12.36149 -6.37335,7.01582 -9.44257,8.22953 -6.14696,13.43596 -1.60298,0.25804 -7.37717,0.14989 -6.61353,11.40706 -12.35503,7.96777 -6.74976,6.61351 7.22292,8.64076 4.65564,8.09741 0.0662,1.35334 -4.65497,5.26431 -0.96394,0.68811 -6.46047,-0.14558 -0.93244,-0.9374 -0.35244,-5.27397 -16.54082,-8.97851 -7.22045,0.20314 -6.07347,8.02887 -1.00183,0.89458 -14.18888,-0.0127 -9.38642,6.14284 -17.34427,0.13542 -9.52021,-6.34597 -0.0685,-16.80506 0.58275,-1.22361 8.42878,-0.0629 0.0669,-6.78445 8.2378,-8.30468 18.32693,-0.16846 -0.0685,-23.8265 1.18282,-1.03671 5.83864,0.0879 7.35421,-8.57057 -7.89426,-6.88685 0.0669,-11.47394 -1.9554,-4.11476 -1.21264,-3.07002 -0.27456,-3.21651 0.33856,-2.15606 0.67217,-1.21469 1.60277,-0.87943 23.7134,-8.4e-4 9.1131,8.10071 15.6647,-0.0685 5.0619,6.0776 6.68124,-0.0685 6.20805,-5.53342 -13.02553,-14.64652 -0.26273,-1.3689 6.74412,-5.79045 -0.1346,-9.92234 -6.66552,-5.25099 -4.75651,-3.35766 -7.88757,-7.32441 -3.92155,-8.78942 -0.26257,-2.35092 0.13376,-9.64818 -3.97933,-11.94794 -9.17998,-0.33857 -13.16346,-9.31209 -0.88999,-1.11844 1.15248,-1.19309 2.55454,-2.58638 3.05331,-2.33164 7.42523,-10.32862
c -0.11257,-2.72336 8.3e-4,-6.61269 8.3e-4,-6.61269
l -7.22541,-5.94218
z`,
  region14: `m 577.0409,576.77087
v -2.70023
l 15.9314,-9.99088 11.341,-10.80096
h 13.77122
l 8.36991,-9.71672 18.88347,-4.85464 4.47921,-2.04809 0.12443,-3.6282 8.67501,-3.21839 9.2411,-0.71753 6.39265,-1.46704 13.50036,-2.70189 15.39136,-2.70024 0.27003,13.77122 8.37073,6.21055
h 12.96115
l -0.27003,23.76209 8.64077,7.02062 29.97264,-0.27002 16.20225,-6.20972 35.10227,-8.3e-4 1.20125,0.25173 0.26834,1.21524 -0.65786,1.2374 -9.11227,5.06109 0.1346,14.04124 -0.3824,2.17822 -0.76623,0.86058 -2.90173,3.10569 -3.17257,1.61931 -3.91576,1.55409 -3.1734,0.54005 -11.40623,10.12382 -1.01321,0.67713 -1.15116,-0.44353 -6.94956,-8.87023 -1.72727,-1.33949 -9.2058,0.12231 -3.5805,1.01156 -3.24277,1.89099 -2.15771,2.15854 -2.16102,3.24111 -1.01403,2.76878 -6.88437,-0.20231 -7.76215,8.50534 -8.91244,0.27167 -12.42275,8.37075 -15.15113,0.0966 0.0323,11.51112 -0.38293,0.8551 -22.31492,15.50888 -22.93783,0.38081 -12.02138,-6.20915 -0.52201,-1.03882 4.32883,-9.19286 0.11302,-12.45254 8.37156,-8.37158 -8.09989,-8.3699 -4.86373,-10.53093 -12.69029,-0.27168 -8.64159,-9.99006 -12.95701,0.27002 -12.96528,-7.559 -11.06932,-0.8109
z`,
};

export const MapCatalogue = () => {
  const isLightTheme = useSelector((state) => state.theme.isLightTheme);
  const map = isLightTheme ? mapLight : mapDark;
  const [onButtonClick, setOnButtonClick] = useState(false);
  const calcRegion = (region, pattern) => {
    const regionPath = document.getElementById(region);
    const regionWidth = regionPath?.getBBox().width;
    const regionHeight = regionPath?.getBBox().height;

    const hoverPattern = document.getElementById(pattern);
    const imageElement = hoverPattern?.querySelector("image");
    imageElement?.setAttribute("width", regionWidth);
    imageElement?.setAttribute("height", regionHeight);
  };

  useEffect(() => {
    calcRegion("region1", "hoverPattern1");
    calcRegion("region2", "hoverPattern2");
    calcRegion("region3", "hoverPattern3");
    calcRegion("region4", "hoverPattern4");
    calcRegion("region5", "hoverPattern5");
    calcRegion("region6", "hoverPattern6");
    calcRegion("region7", "hoverPattern7");
    calcRegion("region8", "hoverPattern8");
    calcRegion("region9", "hoverPattern9");
    calcRegion("region10", "hoverPattern10");
    calcRegion("region11", "hoverPattern11");
    calcRegion("region12", "hoverPattern12");
    calcRegion("region13", "hoverPattern13");
    calcRegion("region14", "hoverPattern14");
  }, []);

  const handleRegionHover = (photo, pattern) => {
    const hoverPattern = document.getElementById(pattern);
    if (hoverPattern) {
      const imageElement = hoverPattern.querySelector("image");
      if (imageElement) {
        imageElement.setAttribute("href", photo);
      }
    }
  };

  const handleRegionOut = (pattern) => {
    handleRegionHover("", pattern);
  };

  return <div className="map-catalogue">
    {" "}
    <div className="map">
      <svg className="svg-map" viewBox="0 0 990 655">
        {/* Карпати */}
        <defs>
          <pattern
            id="hoverPattern1"
            className="hover-pattern-map"
            x="0"
            y="0"
            width="100%"
            height="100%"
          >
            <image id="image1" />
          </pattern>
        </defs>
        <NavLink onClick={() => { handleRegionHover(photo1, "hoverPattern1"); setOnButtonClick(true) }} className="nav" to="/music">
          <path className="path-map"
            id="region1"
            onMouseOver={() => handleRegionHover(photo1, "hoverPattern1")}
            onMouseOut={() => onButtonClick ? null : handleRegionOut("hoverPattern1")}
            d={regions.region1}
            style={{ fill: "url(#hoverPattern1)", objectFit: "cover" }}
          />
        </NavLink>
        {/* Західне Поділля */}
        <defs>
          <pattern id="hoverPattern2" x="0" y="0" width="100%" height="100%">
            <image id="image2" />
          </pattern>
        </defs>
        <path className="path-map"
          id="region2"
          onMouseOver={() => handleRegionHover(photo2, "hoverPattern2")}
          onMouseOut={() => handleRegionOut("hoverPattern2")}
          d={regions.region2}
          style={{ fill: "url(#hoverPattern2)", objectFit: "cover" }}
        />
        {/* Волинь */}
        <defs>
          <pattern id="hoverPattern3" x="0" y="0" width="100%" height="100%">
            <image id="image3" />
          </pattern>
        </defs>
        <path className="path-map"
          id="region3"
          onMouseOver={() => handleRegionHover(photo3, "hoverPattern3")}
          onMouseOut={() => handleRegionOut("hoverPattern3")}
          d={regions.region3}
          style={{ fill: "url(#hoverPattern3)", objectFit: "cover" }}
        />
        {/* Західне Полісся */}
        <defs>
          <pattern id="hoverPattern4" x="0" y="0" width="100%" height="100%">
            <image id="image4" />
          </pattern>
        </defs>
        <path className="path-map"
          id="region4"
          onMouseOver={() => handleRegionHover(photo4, "hoverPattern4")}
          onMouseOut={() => handleRegionOut("hoverPattern4")}
          d={regions.region4}
          style={{ fill: "url(#hoverPattern4)", objectFit: "cover" }}
        />
        {/* Східне Полісся */}
        <defs>
          <pattern id="hoverPattern5" x="0" y="0" width="100%" height="100%">
            <image id="image5" />
          </pattern>
        </defs>
        <path className="path-map"
          id="region5"
          onMouseOver={() => handleRegionHover(photo5, "hoverPattern5")}
          onMouseOut={() => handleRegionOut("hoverPattern5")}
          d={regions.region5}
          style={{ fill: "url(#hoverPattern5)", objectFit: "cover" }}
        />
        {/* Середнє Полісся */}
        <defs>
          <pattern id="hoverPattern6" x="0" y="0" width="100%" height="100%">
            <image id="image6" />
          </pattern>
        </defs>
        <path className="path-map"
          id="region6"
          onMouseOver={() => handleRegionHover(photo6, "hoverPattern6")}
          onMouseOut={() => handleRegionOut("hoverPattern6")}
          d={regions.region6}
          style={{ fill: "url(#hoverPattern6)", objectFit: "cover" }}
        />
        {/* Східне Поділля */}
        <defs>
          <pattern id="hoverPattern7" x="0" y="0" width="100%" height="100%">
            <image id="image7" />
          </pattern>
        </defs>
        <path className="path-map"
          id="region7"
          onMouseOver={() => handleRegionHover(photo7, "hoverPattern7")}
          onMouseOut={() => handleRegionOut("hoverPattern7")}
          d={regions.region7}
          style={{ fill: "url(#hoverPattern7)", objectFit: "cover" }}
        />
        {/* Середня Наддніпрянщина */}
        <defs>
          <pattern id="hoverPattern8" x="0" y="0" width="100%" height="100%">
            <image id="image8" />
          </pattern>
        </defs>
        <path className="path-map"
          id="region8"
          onMouseOver={() => handleRegionHover(photo8, "hoverPattern8")}
          onMouseOut={() => handleRegionOut("hoverPattern8")}
          d={regions.region8}
          style={{ fill: "url(#hoverPattern8)", objectFit: "cover" }}
        />
        {/* Слобідщина */}
        <defs>
          <pattern id="hoverPattern9" x="0" y="0" width="100%" height="100%">
            <image id="image9" />
          </pattern>
        </defs>
        <path
          id="region9"
          onMouseOver={() => handleRegionHover(photo9, "hoverPattern9")}
          onMouseOut={() => handleRegionOut("hoverPattern9")}
          d={regions.region9}
          style={{ fill: "url(#hoverPattern9)", objectFit: "cover" }}
        />
        {/* Донщина */}
        <defs>
          <pattern id="hoverPattern10" x="0" y="0" width="100%" height="100%">
            <image id="image10" />
          </pattern>
        </defs>
        <path
          id="region10"
          onMouseOver={() => handleRegionHover(photo10, "hoverPattern10")}
          onMouseOut={() => handleRegionOut("hoverPattern10")}
          d={regions.region10}
          style={{ fill: "url(#hoverPattern10)", objectFit: "cover" }}
        />
        {/* Таврія */}
        <defs>
          <pattern id="hoverPattern11" x="0" y="0" width="100%" height="100%">
            <image id="image11" />
          </pattern>
        </defs>
        <path
          id="region11"
          onMouseOver={() => handleRegionHover(photo11, "hoverPattern11")}
          onMouseOut={() => handleRegionOut("hoverPattern11")}
          d={regions.region11}
          style={{ fill: "url(#hoverPattern11)", objectFit: "cover" }}
        />
        {/* Нижнє Подніпров'я */}
        <defs>
          <pattern id="hoverPattern12" x="0" y="0" width="100%" height="100%">
            <image id="image12" />
          </pattern>
        </defs>
        <path
          id="region12"
          onMouseOver={() => handleRegionHover(photo12, "hoverPattern12")}
          onMouseOut={() => handleRegionOut("hoverPattern12")}
          d={regions.region12}
          style={{ fill: "url(#hoverPattern12)", objectFit: "cover" }}
        />
        {/* Нижнє Побужжя */}
        <defs>
          <pattern id="hoverPattern13" x="0" y="0" width="100%" height="100%">
            <image id="image13" />
          </pattern>
        </defs>
        <path className="path-map"
          id="region13"
          onMouseOver={() => handleRegionHover(photo13, "hoverPattern13")}
          onMouseOut={() => handleRegionOut("hoverPattern13")}
          d={regions.region13}
          style={{ fill: "url(#hoverPattern13)", objectFit: "cover" }}
        />
        {/* Крим */}
        <defs>
          <pattern id="hoverPattern14" x="0" y="0" width="100%" height="100%">
            <image id="image14" />
          </pattern>
        </defs>
        <path className="path-map"
          id="region14"
          onMouseOver={() => handleRegionHover(photo14, "hoverPattern14")}
          onMouseOut={() => handleRegionOut("hoverPattern14")}
          d={regions.region14}
          style={{ fill: "url(#hoverPattern14)", objectFit: "cover" }}
        />
      </svg>
      <img className="img-map" src={map} alt="Map" />
    </div>
    <Outlet />
  </div>
};
