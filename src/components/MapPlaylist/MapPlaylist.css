/* .map-playlist_container{
  background-image: url('../../images/map-playlist.png');
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { fetchData } from "../../redux/Lullabies/fetchLullabies";
import { selectData, selectLoading } from "../../redux/DataSlice";
import { setCurrentUrl, setCurrentLyrics, setCurrentId } from "../../redux/currentSong/currentSongSlice";

import ReactPlayer from 'react-player';
import classNames from "classnames";

import './MapPlayer.css'
export const MapPlayer = () => {
  const dispatch = useDispatch();
  const loading = useSelector(selectLoading);
  const data = useSelector(selectData);
  const currentVideoUrl = useSelector((state) => state.currentSong.currentUrl);
  const currentVideoLyrics = useSelector((state) => state.currentSong.currentLyrics);
  const currentVideoId = useSelector((state) => state.currentSong.currentId);

  useEffect(() => {
    dispatch(fetchData());
  }, [dispatch]);
  console.log(data[0]);

  return (
    !loading && data && <section id="anima" className="container map-player margin-bottom">
      <div className="map-player_container">
        <ReactPlayer
          className="map-player_video-player"
          url={ currentVideoUrl }
          controls={ true }
          width={ 339 }
          height={ 270 }
          onEnded={ () => {

            const nextSongIndex = currentVideoId + 1;
            if (nextSongIndex < data.length)
            {
              const nextSong = data[nextSongIndex];
              dispatch(setCurrentUrl(nextSong.url));
              dispatch(setCurrentLyrics(nextSong.lyrics));
              dispatch(setCurrentId(nextSong.id));
            }
          } }
        />
      </div>
      <div className="map-player_info ">
        <p className="text-l text-margin">Текст</p>
        <p className="text-base scroll">{ currentVideoLyrics }</p>
      </div>
      <div className="map-player_wrap">
        <div className={ classNames('map-player_playlist scroll') }>
          <p className="text-l text-margin">Колекція музею</p>
          <ul>
            { data.map(({ name, id, url, lyrics }) => (
              <li
                key={ id }
                className={ classNames('map-player_card', { 'active-card': id === currentVideoId }) }
                onClick={ () => handleVideoChange(url, id, lyrics) }
              >
                <div className="map-player_card-text">
                  <div className={ classNames({ 'play': id === currentVideoId }) }></div>
                  <p className="map-player_card-title text-sm">{ name }</p>
                </div>
              </li>
            )) }
          </ul>
        </div>
      </div>
    </section>
  );
}; */